pull:
  desc: 'Tizen pull changes'
  steps:
    - ':branch'
    - shell.Git: [ 'fetch', '--all', cwd: env.PLATFORM_ROOT ]
    - shell.Git: [ 'fetch', '--all', cwd: env.JS_CORE_ROOT ]
    - shell.Git: [ 'checkout', '-f', 'package-lock.json', cwd: env.PLATFORM_ROOT ]
    - shell.git.ResetSubmodules: [ cwd: env.PLATFORM_ROOT ]
    - shell.git.Pull: [ cwd: env.PLATFORM_ROOT ]
    - shell.git.PullSubmodules: [ cwd: env.PLATFORM_ROOT ]
    - ':i'
    - ':branch'

gco:
  desc: 'Tizen branch checkout'
  steps:
    - ':branch'
    - shell.Git: [ 'fetch', '--all', cwd: env.PLATFORM_ROOT ]
    - shell.Git: [ 'fetch', '--all', cwd: env.JS_CORE_ROOT ]
    - shell.Git: [ 'checkout', '-f', '.gitmodules', cwd: env.PLATFORM_ROOT ]
    - shell.Git: [ 'checkout', '-f', 'package.json', cwd: env.PLATFORM_ROOT ]
    - shell.Git: [ 'checkout', '-f', 'package-lock.json', cwd: env.PLATFORM_ROOT ]
    - shell.Git: [ 'checkout', '-f', 'assets/config/config_socket_connection.json', cwd: env.PLATFORM_ROOT ]
    - shell.Git: [ 'checkout', { fn.git.FindBranch: [ env.SB_INPUT, cwd: env.PLATFORM_ROOT ] }, cwd: env.PLATFORM_ROOT ]
    - shell.git.ResetSubmodules: [ cwd: env.PLATFORM_ROOT ]
    - ':i'
    - ':branch'
  required:
    - SB_INPUT

gco_core:
  desc: 'Tizen branch checkout from jscore'
  steps:
    - ':branch'
    - shell.Git: [ 'fetch', '--all', cwd: env.JS_CORE_ROOT ]
    - shell.git.SetSubmoduleBranch: [ { fn.git.FindBranch: [ env.SB_INPUT, cwd: env.JS_CORE_ROOT ] }, 'jscore', cwd: env.PLATFORM_ROOT ]
    - shell.git.PullSubmodules: [ cwd: env.PLATFORM_ROOT ]
    #    - shell.git.ResetSubmodules: [ cwd: env.PLATFORM_ROOT ]
    - shell.Npm: [ 'i', cwd: env.JS_CORE_ROOT ]
    - shell.Echo: [ '' ]
    - ':branch'
  required:
    - SB_INPUT

status:
  desc: 'Tizen branch status'
  steps:
    - shell.Echo: [ 'Branch: ', { fn.git.BranchName: [ cwd: env.PLATFORM_ROOT ] } ]
    - shell.Echo: [ '' ]
    - shell.Git: [ 'status', cwd: env.PLATFORM_ROOT ]
    - shell.Echo: [ '' ]
    - shell.Echo: [ 'Branch jscore:', { fn.git.Config: [ '.gitmodules', [ 'submodule "jscore"', 'branch' ], cwd: env.PLATFORM_ROOT ] } ]
    - shell.Echo: [ '' ]
    - shell.Git: [ 'status', cwd: env.JS_CORE_ROOT ]

branch:
  desc: 'Tizen branch'
  steps:
    - shell.Echo: [ 'Branch:', { fn.git.BranchName: [ cwd: env.PLATFORM_ROOT ] } ]
    - shell.Echo: [ 'Branch jscore:', { fn.git.Config: [ '.gitmodules', [ 'submodule "jscore"', 'branch' ], cwd: env.PLATFORM_ROOT ] } ]
    - shell.Echo: [ '' ]

i:
  desc: 'Tizen npm install'
  steps:
    - shell.Npm: [ 'i', cwd: env.PLATFORM_ROOT ]
    - shell.Npm: [ 'i', cwd: env.JS_CORE_ROOT ]
    - shell.Echo: [ '' ]

find:
  desc: 'Tizen branch find'
  steps:
    - shell.Echo: [ 'Branch:', { fn.git.FindBranch: [ env.SB_INPUT, cwd: env.PLATFORM_ROOT ] } ]
    - shell.Echo: [ 'Branch jscore:', { fn.git.FindBranch: [ env.SB_INPUT, cwd: env.JS_CORE_ROOT ] } ]
    - shell.Echo: [ '' ]
  required:
    - SB_INPUT